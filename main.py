import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InputMediaPhoto
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è ConversationHandler
MAIN_MENU, GET_PHOTOS, GET_DESCRIPTION, GET_CONTACT = range(4)

# –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
channel_id = '@ks_apartments'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞–Ω–∞–ª–∞

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    reply_keyboard = [['üì∏ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', 'ü§ù –°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ']]
    await update.message.reply_text(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return MAIN_MENU

async def publish(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    reply_keyboard = [['–ù–∞–∑–∞–¥']]
    await update.message.reply_text(
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–∏–Ω–∏–º—É–º 3 —Ñ–æ—Ç–æ –≤–∞—à–µ–≥–æ –¥–æ–º–∞ –∏–ª–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã.',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    context.user_data['photos'] = []
    return GET_PHOTOS

async def get_photos(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    if update.message.text == '–ù–∞–∑–∞–¥':
        return await start(update, context)
    if update.message.photo:
        context.user_data['photos'].append(update.message.photo[-1].file_id)
        if len(context.user_data['photos']) >= 3:
            await update.message.reply_text('–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –¥–æ–º–∞ –∏–ª–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã.')
            return GET_DESCRIPTION
        else:
            await update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—â–µ —Ñ–æ—Ç–æ.')
            return GET_PHOTOS
    else:
        await update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ.')
        return GET_PHOTOS

async def get_description(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    if update.message.text == '–ù–∞–∑–∞–¥':
        return await start(update, context)
    context.user_data['description'] = update.message.text
    reply_keyboard = [[KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)], ['–ù–∞–∑–∞–¥']]
    await update.message.reply_text(
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return GET_CONTACT

async def get_contact(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    if update.message.text == '–ù–∞–∑–∞–¥':
        return await start(update, context)
    if update.message.contact:
        context.user_data['phone_number'] = update.message.contact.phone_number
        context.user_data['username'] = update.message.from_user.username
        await update.message.reply_text('–°–ø–∞—Å–∏–±–æ! –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.', reply_markup=ReplyKeyboardRemove())

        media_group = []
        for i, photo in enumerate(context.user_data['photos']):
            caption = (
                f"{context.user_data['description']}\n"
                f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {context.user_data['phone_number']}\n"
                f"–Æ–∑–µ—Ä–Ω–µ–π–º: @{context.user_data['username']}\n"
                f"‚ùóÔ∏è–°–µ—Ä–≤–∏—Å –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –í–∞—à–∏ —Å–¥–µ–ª–∫–∏‚ùóÔ∏è"
            )
            media_group.append(InputMediaPhoto(photo, caption=caption if i == 0 else ""))

        await context.bot.send_media_group(chat_id=channel_id, media=media_group)

        context.user_data.clear()
        return await start(update, context)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    else:
        await update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.')
        return GET_CONTACT

async def cooperation(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text('–î–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ –ø–æ—á—Ç–µ - connect.dev.studio@gmail.com –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º - @tgAkbarr.')
    return MAIN_MENU

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text('–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ù–∞–¥–µ–µ–º—Å—è —É–≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞.', reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

def main() -> None:
    application = Application.builder().token("7112513940:AAGd6zzA4-NO9MjY8VrWo8ZC7_mkV_fx8i4").build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            MAIN_MENU: [
                MessageHandler(filters.Regex('^(üì∏ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å)$'), publish),
                MessageHandler(filters.Regex('^(ü§ù –°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ)$'), cooperation),
            ],
            GET_PHOTOS: [
                MessageHandler(filters.PHOTO, get_photos),
                MessageHandler(filters.TEXT & ~filters.COMMAND, get_photos),
            ],
            GET_DESCRIPTION: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, get_description)
            ],
            GET_CONTACT: [
                MessageHandler(filters.CONTACT, get_contact),
                MessageHandler(filters.TEXT & ~filters.COMMAND, get_contact),
            ],
        },
        fallbacks=[CommandHandler('cancel', cancel), CommandHandler('start', start)],
    )

    application.add_handler(conv_handler)
    application.run_polling()

if __name__ == '__main__':
    main()